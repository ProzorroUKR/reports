stages:
  - build
  - test
  - test_js

build: &base_build
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    GIT_STRATEGY: fetch
  script:
    - echo $IMAGE_TAG
    - docker build  . --file=./docker/reports/Dockerfile --tag $IMAGE_TAG 
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $IMAGE_TAG
  tags:
    - shell
  rules:
    - if: $CI_COMMIT_BRANCH

    
build_tag: 
  <<: *base_build    
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG




variables:
  COUCHDB_USER: admin
  COUCHDB_PASSWORD: admin

Python tests:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA 
  tags:
    - kube-dev
  only:
    - branches
  services:
    - couchdb:1.6
  script:
    - pip install mock nose coverage
    - nosetests -v --with-coverage  --cover-package=reports
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
Js tests:
  stage: test_js
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  tags:
    - kube-dev
  only:
    - branches
  allow_failure: true
  cache:
    paths:
      - node_modules/
  script:
    - curl -o node-v11.15.0-linux-x64.tar.xz https://nodejs.org/dist/v11.15.0/node-v11.15.0-linux-x64.tar.xz
    - mkdir -p ~/.local/nodejs
    - tar -xf node-v11.15.0-linux-x64.tar.xz -C ~/.local/nodejs --strip-components=1
    - export PATH="$HOME/.local/nodejs/bin:$PATH"
    - npm install
    - npm run test
