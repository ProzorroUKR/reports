[buildout]
develop = .
extensions = buildout.wheel

parts =
    scripts
    circus
    circusd
    circusctl
    reports
    circus.ini
    couchdb.ini
    reports.yaml
    mkdirs
    vault.hcl

eggs = 
    circus
    reports

find-links =
    http://op:x9W3jZ@dist.quintagroup.com/op/
    http://dist.quintagroup.com/proxy/pypi/

log-format = %(name)s - %(message)s
index = https://pypi.python.org/simple

[config-from-template]
recipe = amplecode.recipe.template
template-file = templates/${:_buildout_section_name_}
target-file = ${buildout:directory}/etc/${:_buildout_section_name_}
target-executable = true

[s3cmd]
recipe = zc.recipe.egg
scripts = s3cmd

[awscli]
recipe = zc.recipe.egg
scripts = aws

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}


[swift]
recipe = zc.recipe.egg
scripts = swift


[reports]
<=scripts
interpreter = 
initialization=
    sys.argv[1:1]= ('-c ${buildout:directory}/etc/reports.yaml').split()
scripts = 
    invoices
    bids
    tenders
    refunds
    zip
    send
    init
    generate

[circus]
<=scripts
interpreter =
scripts =
    circusd-stats
    circus-top

[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=circus
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl

[circus.ini]
<= config-from-template
statsd = True
endpoint = ipc://${buildout:directory}/var/circus_endpoint
vault = True
vault_binary = /usr/sbin/vault

[vault.hcl]
<= config-from-template
address = ${reports.yaml:vault_address}
disable_tls = 1

[couchdb.ini]
<= config-from-template
port = 5984
host = 127.0.0.1

[reports.yaml]
<= config-from-template
db_name = tenders
admin_name = admin
admin_password = admin
user_name = user
user_password = user
api_host = https://lb.api-sandbox.openprocurement.org
api_ver = 2.3
bucket = test
expires = 3600
passwords_prefix = 
smtp_server = 
smtp_port =
verified_email =
emails =
use_auth = False
storage =
proxy_address =
vault_address = 127.0.0.1:8200


[logrotate.conf]
<= config-from-template
uploader =
host =
region =
logs_bucket =
logs_dir =
aws_access_key =
aws_secret_key =


[logrotate-monthly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:target-file} >>${buildout:directory}/var/log/logrotate.log 2>&1


[mkdirs]
recipe =  z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/log
    ${buildout:directory}/var/reports
    ${buildout:directory}/var/couchdb
