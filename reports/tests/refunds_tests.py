import unittest
from uuid import uuid4

from reports.tests.base import BaseRefundsUtilityTest
from copy import copy
from reports.utilities.refunds import CHANGE_2017_DATE, CHANGE_2019_DATE, CHANGE_2023_DATE
from reports.helpers import prepare_result_file_name

test_award_period = '2016-04-17T13:32:25.774673+02:00'


class ReportRefundsUtilityTestCase(BaseRefundsUtilityTest):

    def test_invoices_utility_output(self):
        data = {
            "procurementMethodType": "aboveThresholdUA",
            "contracts": [{
                "status": "active",
                "date": "2017-12-18T22:00:00"
            }],
            "procuringEntity": {
                "kind": "general"
            }
        }
        doc = copy(self.test_data)
        doc.update(data)
        self.utility.db.save(doc)

        self.utility.run()
        self.assertEqual(
            self.utility.counters[2], [1, 0, 0, 0, 0, 0]
        )

        def expected_output():
            return (
                '{}{}'.format(','.join(self.utility.headers), '\r\n') +

                'before 2017\r\n' +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.config.payments(2016)))) +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.counters[0]))) +
                '{}\r\n'.format(
                    ','.join((
                        str(i) for i in
                        (c * v for c, v in zip(self.utility.counters[0], self.utility.config.payments(2016)))
                    ))
                ) +

                'after 2017-01-01\r\n' +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.config.payments(2017)))) +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.counters[1]))) +
                '{}\r\n'.format(
                    ','.join((
                        str(i) for i in
                        (c * v for c, v in zip(self.utility.counters[1], self.utility.config.payments(2017)))
                    ))
                ) +

                'after {}\r\n'.format(CHANGE_2017_DATE) +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.config.payments(2017)))) +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.counters[2]))) +
                '{}\r\n'.format(
                    ','.join((
                        str(i) for i in
                        (c * v for c, v in zip(self.utility.counters[2], self.utility.config.payments(2017)))
                    ))
                ) +

                'after {}\r\n'.format(CHANGE_2019_DATE) +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.config.payments(2019)))) +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.counters[3]))) +
                '{}\r\n'.format(
                    ','.join((
                        str(i) for i in
                        (c * v for c, v in zip(self.utility.counters[3], self.utility.config.payments(2019)))
                    ))
                ) +

                'after {}\r\n'.format(CHANGE_2023_DATE) +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.config.payments(2023)))) +
                '{}\r\n'.format(','.join((str(i) for i in self.utility.counters[4]))) +
                '{}\r\n'.format(
                    ','.join((
                        str(i) for i in
                        (c * v for c, v in zip(self.utility.counters[4], self.utility.config.payments(2023)))
                    ))
                )
            )

        with open(prepare_result_file_name(self.utility), 'rb') as file:
            self.assertEqual(file.read(), expected_output())

        self.utility.init_counters()
        doc = self.utility.db[doc['_id']]
        doc.update({'value': {'amount': 25000, 'currency': 'UAH'}})
        self.utility.db.save(doc)
        self.utility.run()
        self.assertEqual(
            self.utility.counters[2], [0, 1, 0, 0, 0, 0]
        )

        with open(prepare_result_file_name(self.utility), 'rb') as file:
            self.assertEqual(file.read(), expected_output())

        self.utility.init_counters()
        doc = self.utility.db[doc['_id']]
        doc.update({'value': {'amount': 55000, 'currency': 'UAH'}})
        self.utility.db.save(doc)

        self.utility.run()
        self.assertEqual(
            self.utility.counters[2], [0, 0, 1, 0, 0, 0]
        )

        with open(prepare_result_file_name(self.utility), 'rb') as file:
            self.assertEqual(file.read(), expected_output())

        self.utility.init_counters()
        doc = self.utility.db[doc['_id']]
        doc.update({'value': {'amount': 255000, 'currency': 'UAH'}})
        self.utility.db.save(doc)

        self.utility.run()
        self.assertEqual(
            self.utility.counters[2], [0, 0, 0, 1, 0, 0]
        )

        with open(prepare_result_file_name(self.utility), 'rb') as file:
            self.assertEqual(file.read(), expected_output())

        self.utility.init_counters()
        doc = self.utility.db[doc['_id']]
        doc.update({'value': {'amount': 1255000, 'currency': 'UAH'}})
        self.utility.db.save(doc)

        self.utility.run()
        self.assertEqual(
            self.utility.counters[2], [0, 0, 0, 0, 1, 0]
        )

        with open(prepare_result_file_name(self.utility), 'rb') as file:
            self.assertEqual(file.read(), expected_output())

        del self.utility.db[doc['_id']]
        
    def generate_data(self, date, amount):
        return {
            "_id": uuid4().hex,
            "enquiryPeriod": {
                "startDate": date
            },
            "value": {
                "currency": "UAH",
                "amount": amount,
                "valueAddedTaxIncluded": False
            },
            "procurementMethodType": "aboveThresholdUA",
            "contracts": [{
                "status": "active",
                "date": date,
            }],
            "procuringEntity": {
                "kind": "general"
            }
        }

    def test_2019(self):
        date = "2019-08-22T00:01:50+02:00"

        self.assertResult(
            [
                self.generate_data(date, 1),
                self.generate_data(date, 20000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['2',       '0',            '0',            '0',                '0',                '0'         ],
                ['6.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 20001),
                self.generate_data(date, 50000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '2',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '30.0',         '0.0',          '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 50001),
                self.generate_data(date, 200000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '2',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '80.0',         '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 200001),
                self.generate_data(date, 1000000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '2',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '120.0',            '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 1000001),
                self.generate_data(date, 4000000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '0',                '2',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '600.0',            '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 4000001),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '1'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '600.0'     ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],
            ]
        )

    def test_2023(self):
        date = "2023-07-06T00:01:50+02:00"

        self.assertResult(
            [
                self.generate_data(date, 1),
                self.generate_data(date, 20000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['2',       '0',            '0',            '0',                '0',                '0'         ],
                ['7.2',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 20001),
                self.generate_data(date, 50000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '2',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '36.0',         '0.0',          '0.0',              '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 50001),
                self.generate_data(date, 200000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '2',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '96.0',         '0.0',              '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 200001),
                self.generate_data(date, 1000000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '2',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '144.0',            '0.0',              '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 1000001),
                self.generate_data(date, 4000000),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '0',                '2',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '720.0',            '0.0'       ],
            ]
        )

        self.assertResult(
            [
                self.generate_data(date, 4000001),
            ],
            [
                ['<= 20.0', '>20.0<=50.0',  '>50.0<=200.0', '>200.0<=1000.0',   '>1000.0<=4000.0',  '>4000.0'   ],

                ['before 2017'                                                                                  ],
                ['5.0',     '20.0',         '50.0',         '75.0',             '350.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-01-01'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2017-08-16'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0'                         ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0'                           ],

                ['after 2019-08-22'                                                                             ],
                ['3.0',     '15.0',         '40.0',         '60.0',             '300.0',            '600.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '0'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '0.0'       ],

                ['after 2023-07-06'                                                                             ],
                ['3.6',     '18.0',         '48.0',         '72.0',             '360.0',            '720.0'     ],
                ['0',       '0',            '0',            '0',                '0',                '1'         ],
                ['0.0',     '0.0',          '0.0',          '0.0',              '0.0',              '720.0'     ],
            ]
        )


def suite():
    suite = unittest.TestSuite()
    suite.addTest(unittest.makeSuite(ReportRefundsUtilityTestCase))
    return suite


if __name__ == '__main__':
    unittest.main(defaultTest='suite')
